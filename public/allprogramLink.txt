1. Read name and marks of n students and store in a file
csharp
Copy code
using System;
using System.IO;

class Program
{
    static void Main()
    {
        Console.Write("Enter the number of students: ");
        int n = int.Parse(Console.ReadLine());

        using (StreamWriter writer = new StreamWriter("students.txt"))
        {
            for (int i = 0; i < n; i++)
            {
                Console.Write($"Enter name of student {i + 1}: ");
                string name = Console.ReadLine();
                Console.Write($"Enter marks of student {i + 1}: ");
                int marks = int.Parse(Console.ReadLine());
                writer.WriteLine($"Name: {name}, Marks: {marks}");
            }
        }

        Console.WriteLine("Data stored in students.txt");
    }
}
2. Swap Two Numbers With a Temporary Variable
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter first number: ");
        int a = int.Parse(Console.ReadLine());
        Console.Write("Enter second number: ");
        int b = int.Parse(Console.ReadLine());

        int temp = a;
        a = b;
        b = temp;

        Console.WriteLine($"After swapping: a = {a}, b = {b}");
    }
}
3. Check Admission Eligibility
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter your age: ");
        int age = int.Parse(Console.ReadLine());

        if (age >= 18)
            Console.WriteLine("You are eligible for admission.");
        else
            Console.WriteLine("You are not eligible for admission.");
    }
}
4. Perform Arithmetic Operations
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter first number: ");
        int a = int.Parse(Console.ReadLine());
        Console.Write("Enter second number: ");
        int b = int.Parse(Console.ReadLine());

        Console.WriteLine($"Addition: {a + b}");
        Console.WriteLine($"Subtraction: {a - b}");
        Console.WriteLine($"Multiplication: {a * b}");
        Console.WriteLine($"Division: {(b != 0 ? (a / (double)b).ToString() : "Undefined")}");
    }
}
5. Calculate the Area of a Rectangle
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter length: ");
        double length = double.Parse(Console.ReadLine());
        Console.Write("Enter breadth: ");
        double breadth = double.Parse(Console.ReadLine());

        double area = length * breadth;
        Console.WriteLine($"Area of the rectangle: {area}");
    }
}
6. Find Factorial Using For and While Loop
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());
        
        Console.WriteLine("Using for loop:");
        long factorial = 1;
        for (int i = 1; i <= num; i++)
            factorial *= i;
        Console.WriteLine($"Factorial: {factorial}");

        Console.WriteLine("Using while loop:");
        factorial = 1;
        int j = 1;
        while (j <= num)
        {
            factorial *= j;
            j++;
        }
        Console.WriteLine($"Factorial: {factorial}");
    }
}
7. Check if a Number is Odd or Even
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());

        string result = (num % 2 == 0) ? "Even" : "Odd";
        Console.WriteLine($"The number is {result}.");
    }
}
8. Factorial and Sum of Numbers Using Loops
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter a number: ");
        int num = int.Parse(Console.ReadLine());

        long factorial = 1;
        int sum = 0;

        for (int i = 1; i <= num; i++)
        {
            factorial *= i;
            sum += i;
        }

        Console.WriteLine($"Factorial: {factorial}, Sum: {sum}");
    }
}
I'll provide the remaining codes in the next response if necessary! Let me know if you want me to continue or explain any part.






You said:
please provide the remaining
ChatGPT said:
ChatGPT
9. Addition of Two Complex Numbers
csharp
Copy code
using System;

class Complex
{
    public double Real { get; set; }
    public double Imaginary { get; set; }

    public Complex(double real, double imaginary)
    {
        Real = real;
        Imaginary = imaginary;
    }

    public static Complex Add(Complex c1, Complex c2)
    {
        return new Complex(c1.Real + c2.Real, c1.Imaginary + c2.Imaginary);
    }

    public override string ToString()
    {
        return $"{Real} + {Imaginary}i";
    }
}

class Program
{
    static void Main()
    {
        Console.Write("Enter real part of first complex number: ");
        double real1 = double.Parse(Console.ReadLine());
        Console.Write("Enter imaginary part of first complex number: ");
        double imaginary1 = double.Parse(Console.ReadLine());

        Console.Write("Enter real part of second complex number: ");
        double real2 = double.Parse(Console.ReadLine());
        Console.Write("Enter imaginary part of second complex number: ");
        double imaginary2 = double.Parse(Console.ReadLine());

        Complex c1 = new Complex(real1, imaginary1);
        Complex c2 = new Complex(real2, imaginary2);

        Complex result = Complex.Add(c1, c2);

        Console.WriteLine($"Sum of complex numbers: {result}");
    }
}
10. Program Using Variables, Data Types, and Operators
csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        int a = 10;
        double b = 20.5;
        char c = 'X';
        string str = "Hello";
        bool isTrue = true;

        Console.WriteLine($"Integer: {a}, Double: {b}, Char: {c}, String: {str}, Boolean: {isTrue}");
        Console.WriteLine($"Addition: {a + b}");
        Console.WriteLine($"Concatenation: {str + " World"}");
    }
}
11. Registration Web Forms for ‘National Level Symposium’ Using ASP.NET
This would involve using an ASP.NET Web Forms project. Here's a basic structure for the form in the front-end Default.aspx file:

html
Copy code
<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="WebApplication.Default" %>

<!DOCTYPE html>
<html>
<head>
    <title>National Level Symposium Registration</title>
</head>
<body>
    <form id="form1" runat="server">
        <div>
            <h2>Registration Form</h2>
            <label for="name">Name:</label>
            <asp:TextBox ID="txtName" runat="server"></asp:TextBox><br /><br />
            <label for="email">Email:</label>
            <asp:TextBox ID="txtEmail" runat="server"></asp:TextBox><br /><br />
            <label for="phone">Phone:</label>
            <asp:TextBox ID="txtPhone" runat="server"></asp:TextBox><br /><br />
            <asp:Button ID="btnSubmit" runat="server" Text="Submit" OnClick="btnSubmit_Click" />
        </div>
    </form>
</body>
</html>
And the back-end in Default.aspx.cs:

csharp
Copy code
using System;

public partial class Default : System.Web.UI.Page
{
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        string name = txtName.Text;
        string email = txtEmail.Text;
        string phone = txtPhone.Text;

        // You can save these details to a database or show confirmation
        Response.Write($"Registration successful! Name: {name}, Email: {email}, Phone: {phone}");
    }
}
12. HR System for XML Employee Records
csharp
Copy code
using System;
using System.Xml.Linq;

class Program
{
    static void Main()
    {
        XElement employees = new XElement("Employees",
            new XElement("Employee",
                new XElement("ID", "101"),
                new XElement("Name", "John Doe"),
                new XElement("Department", "HR"),
                new XElement("JobTitle", "Manager")
            ),
            new XElement("Employee",
                new XElement("ID", "102"),
                new XElement("Name", "Jane Smith"),
                new XElement("Department", "IT"),
                new XElement("JobTitle", "Developer")
            )
        );

        employees.Save("Employees.xml");
        Console.WriteLine("Employee data saved to Employees.xml");
    }
}
13. Addition of Two Numbers Using Button Click in Windows Forms
You'll need a Windows Forms application. Here’s the code for the Form1.cs file:

csharp
Copy code
using System;
using System.Windows.Forms;

public partial class Form1 : Form
{
    public Form1()
    {
        InitializeComponent();
    }

    private void btnAdd_Click(object sender, EventArgs e)
    {
        int num1 = int.Parse(txtNum1.Text);
        int num2 = int.Parse(txtNum2.Text);

        int sum = num1 + num2;
        lblResult.Text = $"Sum: {sum}";
    }
}
Ensure you add TextBox controls (txtNum1, txtNum2), a Button (btnAdd), and a Label (lblResult) in the designer.

14. Concatenate Strings Using Operator Overloading
csharp
Copy code
using System;

class Program
{
    class Concatenate
    {
        public string Value { get; set; }

        public Concatenate(string value)
        {
            Value = value;
        }

        public static Concatenate operator +(Concatenate a, Concatenate b)
        {
            return new Concatenate(a.Value + b.Value);
        }
    }

    static void Main()
    {
        Concatenate str1 = new Concatenate("CYBER");
        Concatenate str2 = new Concatenate("SECURITY");

        Concatenate result = str1 + str2;
        Console.WriteLine($"Concatenated String: {result.Value}");
    }
}
15. Find Area, Volume, and Perimeter Using Single Inheritance
csharp
Copy code
using System;

class Rectangle
{
    public double Length { get; set; }
    public double Breadth { get; set; }

    public double Area() => Length * Breadth;
    public double Perimeter() => 2 * (Length + Breadth);
}

class Cuboid : Rectangle
{
    public double Height { get; set; }

    public double Volume() => Length * Breadth * Height;
}

class Program
{
    static void Main()
    {
        Cuboid cuboid = new Cuboid
        {
            Length = 5,
            Breadth = 3,
            Height = 4
        };

        Console.WriteLine($"Area: {cuboid.Area()}, Perimeter: {cuboid.Perimeter()}, Volume: {cuboid.Volume()}");
    }
}
16. Calculate Area of Square, Rectangle, and Circle Using Method Overloading
csharp
Copy code
using System;

class AreaCalculator
{
    public double Calculate(double side) => side * side; // Square
    public double Calculate(double length, double breadth) => length * breadth; // Rectangle
    public double Calculate(double radius, bool isCircle) => Math.PI * radius * radius; // Circle
}

class Program
{
    static void Main()
    {
        AreaCalculator calc = new AreaCalculator();

        Console.WriteLine($"Area of Square: {calc.Calculate(5)}");
        Console.WriteLine($"Area of Rectangle: {calc.Calculate(5, 3)}");
        Console.WriteLine($"Area of Circle: {calc.Calculate(3, true)}");
    }
}
Let me know if you need further explanation or adjustments! 😊






You said:
how to take an array input ??
ChatGPT said:
ChatGPT
In C#, you can take an array as input from the user in several ways. Here are three common approaches:

1. Using Console.ReadLine with Split
You can take the entire array as a single line of input and split it into individual elements.

csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("Enter array elements separated by spaces:");
        string input = Console.ReadLine();
        
        // Split the input string into an array of strings
        string[] elements = input.Split(' ');

        // Convert to integer array (if needed)
        int[] array = Array.ConvertAll(elements, int.Parse);

        Console.WriteLine("You entered:");
        foreach (int num in array)
        {
            Console.WriteLine(num);
        }
    }
}
2. Using a Loop
You can take each element of the array individually.

csharp
Copy code
using System;

class Program
{
    static void Main()
    {
        Console.Write("Enter the size of the array: ");
        int size = int.Parse(Console.ReadLine());

        int[] array = new int[size];

        Console.WriteLine($"Enter {size} elements:");
        for (int i = 0; i < size; i++)
        {
            Console.Write($"Element {i + 1}: ");
            array[i] = int.Parse(Console.ReadLine());
        }

        Console.WriteLine("You entered:");
        foreach (int num in array)
        {
            Console.WriteLine(num);
        }
    }
}